trigger:
- main

variables:
  azureServiceConnectionId: '43fd33e3-498c-48cf-a50e-9ace4dc2c1d8'
  webAppName: 'flask-ml-azure-sayan'
  environmentName: 'flask-ml-azure-sayan'
  projectRoot: $(System.DefaultWorkingDirectory)
  pythonVersion: '3.7'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: BuildJob
    pool:
      name: 'MacBook Pool'  # Stelle sicher, dass dies dein MacBook-Agent-Pool ist
    steps:
    - script: |
        python3 -m venv antenv
        source antenv/bin/activate
        python3 -m pip install --upgrade pip
        pip install setup
        pip install -r requirements.txt
      workingDirectory: $(projectRoot)
      displayName: "Install requirements"

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(projectRoot)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      displayName: 'Upload package'
      artifact: drop

- stage: Deploy
  displayName: 'Deploy Web App'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeploymentJob
    pool:
      name: 'MacBook Pool'
    environment: $(environmentName)
    strategy:
      runOnce:
        deploy:
          steps:
          - script: |
              source antenv/bin/activate
              pip install -r requirements.txt
            displayName: 'Ensure Python environment'
          
          - task: AzureWebApp@1
            displayName: 'Deploy Azure Web App : flask-ml-azure-sayan'
            inputs:
              azureSubscription: $(azureServiceConnectionId)
              appName: $(webAppName)
              package: $(Pipeline.Workspace)/
